{"ast":null,"code":"import { all, call, put, takeLatest } from '@redux-saga/core/effects';\nimport { auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase-utils';\nimport { CHECK_USER_SESSION, EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START, SIGN_OUT_START, SIGN_UP_START } from './user-types';\nimport { googleProvider } from '../../firebase/firebase-utils';\nimport { signInFail, signInSuccess, signOutFail, signOutSuccess, signUpFail, signUpSuccess } from './user-actions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFail(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFail(error.message));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (err) {\n    yield put(signInFail(err));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFail(err.message));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess(user, {\n      displayName\n    }));\n  } catch (err) {\n    yield put(signUpFail(err.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["D:/courseHunter/React  ( Redux, Hooks, GraphQL)/practice_project/src/redux/user/user-sagas.js"],"names":["all","call","put","takeLatest","auth","createUserProfileDocument","getCurrentUser","CHECK_USER_SESSION","EMAIL_SIGN_IN_START","GOOGLE_SIGN_IN_START","SIGN_OUT_START","SIGN_UP_START","googleProvider","signInFail","signInSuccess","signOutFail","signOutSuccess","signUpFail","signUpSuccess","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","message","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","err","signOut","signUp","displayName","createUserWithEmailAndPassword","onGoogleSignInStart","onEmailSignInStart","onCheckUserSession","onSignOutStart","onSignUpStart","userSagas"],"mappings":"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","sourcesContent":["import { all, call, put, takeLatest } from '@redux-saga/core/effects';\r\nimport {\r\n  auth,\r\n  createUserProfileDocument,\r\n  getCurrentUser,\r\n} from '../../firebase/firebase-utils';\r\nimport {\r\n  CHECK_USER_SESSION,\r\n  EMAIL_SIGN_IN_START,\r\n  GOOGLE_SIGN_IN_START,\r\n  SIGN_OUT_START,\r\n  SIGN_UP_START,\r\n} from './user-types';\r\nimport { googleProvider } from '../../firebase/firebase-utils';\r\nimport {\r\n  signInFail,\r\n  signInSuccess,\r\n  signOutFail,\r\n  signOutSuccess,\r\n  signUpFail,\r\n  signUpSuccess,\r\n} from './user-actions';\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n  try {\r\n    const userRef = yield call(\r\n      createUserProfileDocument,\r\n      userAuth,\r\n      additionalData,\r\n    );\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(signInFail(error));\r\n  }\r\n}\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFail(error.message));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFail(error.message));\r\n  }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n  } catch (err) {\r\n    yield put(signInFail(err));\r\n  }\r\n}\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  } catch (err) {\r\n    yield put(signOutFail(err.message));\r\n  }\r\n}\r\n\r\nexport function* signUp({ payload: { email, password, displayName } }) {\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n    yield put(signUpSuccess(user, { displayName }));\r\n  } catch (err) {\r\n    yield put(signUpFail(err.message));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(isUserAuthenticated),\r\n    call(onSignOutStart),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}