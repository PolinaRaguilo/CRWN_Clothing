{"ast":null,"code":"import { all, call, put, takeLatest } from '@redux-saga/core/effects';\nimport { auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase-utils';\nimport { CHECK_USER_SESSION, EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START } from './user-types';\nimport { googleProvider } from '../../firebase/firebase-utils';\nimport { emailSignInFail, emailSignInSuccess, googleSignInFail, googleSignInSuccess } from './user-actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFail(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFail(error.message));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(emailSignInFail(err.message));\n    yield put(googleSignInFail(err.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated)]);\n}","map":{"version":3,"sources":["D:/courseHunter/React  ( Redux, Hooks, GraphQL)/practice_project/src/redux/user/user-sagas.js"],"names":["all","call","put","takeLatest","auth","createUserProfileDocument","getCurrentUser","CHECK_USER_SESSION","EMAIL_SIGN_IN_START","GOOGLE_SIGN_IN_START","googleProvider","emailSignInFail","emailSignInSuccess","googleSignInFail","googleSignInSuccess","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","message","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","userAuth","err","onGoogleSignInStart","onEmailSignInStart","onCheckUserSession","userSagas"],"mappings":"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","sourcesContent":["import { all, call, put, takeLatest } from '@redux-saga/core/effects';\r\nimport {\r\n  auth,\r\n  createUserProfileDocument,\r\n  getCurrentUser,\r\n} from '../../firebase/firebase-utils';\r\nimport {\r\n  CHECK_USER_SESSION,\r\n  EMAIL_SIGN_IN_START,\r\n  GOOGLE_SIGN_IN_START,\r\n} from './user-types';\r\nimport { googleProvider } from '../../firebase/firebase-utils';\r\nimport {\r\n  emailSignInFail,\r\n  emailSignInSuccess,\r\n  googleSignInFail,\r\n  googleSignInSuccess,\r\n} from './user-actions';\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n\r\n    yield put(\r\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }),\r\n    );\r\n  } catch (error) {\r\n    yield put(googleSignInFail(error.message));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n\r\n    yield put(\r\n      emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }),\r\n    );\r\n  } catch (error) {\r\n    yield put(emailSignInFail(error.message));\r\n  }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    const userRef = yield call(createUserProfileDocument, userAuth);\r\n    const userSnapshot = yield userRef.get();\r\n\r\n    yield put(\r\n      emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }),\r\n    );\r\n    yield put(\r\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }),\r\n    );\r\n  } catch (err) {\r\n    yield put(emailSignInFail(err.message));\r\n    yield put(googleSignInFail(err.message));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(isUserAuthenticated),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}