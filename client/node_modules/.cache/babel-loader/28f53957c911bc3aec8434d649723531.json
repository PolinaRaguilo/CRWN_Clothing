{"ast":null,"code":"var _jsxFileName = \"D:\\\\courseHunter\\\\React  ( Redux, Hooks, GraphQL)\\\\practice_project\\\\src\\\\pages\\\\shop-page\\\\shop-page.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport WithSpinner from '../../components/with-spinner/with-spinner'; // import { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\n\nimport { fetchCollectionsStart } from '../../redux/shop/shop-sagas';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop-selectors';\nimport CollectionPage from '../collection-page/collection-page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    this.props.fetchCollectionsStart();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${this.props.match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: this.props.loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${this.props.match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: !this.props.isCollectionLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.shop.isFetching,\n    isCollectionLoaded: selectIsCollectionsLoaded(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["D:/courseHunter/React  ( Redux, Hooks, GraphQL)/practice_project/src/pages/shop-page/shop-page.js"],"names":["Component","connect","Route","CollectionsOverview","WithSpinner","fetchCollectionsStart","selectIsCollectionsLoaded","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","props","render","match","path","loading","isCollectionLoaded","mapStateToProps","state","shop","isFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,mBAAP,MAAgC,4DAAhC;AACA,OAAOC,WAAP,MAAwB,4CAAxB,C,CAEA;;AACA,SAASC,qBAAT,QAAsC,6BAAtC;AACA,SAASC,yBAAT,QAA0C,iCAA1C;AACA,OAAOC,cAAP,MAA2B,oCAA3B;;AAEA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACD,mBAAD,CAAlD;KAAMK,8B;AACN,MAAMC,yBAAyB,GAAGL,WAAW,CAACG,cAAD,CAA7C;MAAME,yB;;AAEN,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AAC/BW,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWP,qBAAX;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAE,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,IAAK,EAFjC;AAGE,QAAA,MAAM,EAAGH,KAAD,iBACN,QAAC,8BAAD;AACE,UAAA,SAAS,EAAE,KAAKA,KAAL,CAAWI,OADxB;AAAA,aAEMJ;AAFN;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAE,KAAKA,KAAL,CAAWE,KAAX,CAAiBC,IAAK,gBADjC;AAEE,QAAA,MAAM,EAAGH,KAAD,iBACN,QAAC,yBAAD;AACE,UAAA,SAAS,EAAE,CAAC,KAAKA,KAAL,CAAWK,kBADzB;AAAA,aAEML;AAFN;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AA7B8B;;AAgCjC,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLH,IAAAA,OAAO,EAAEG,KAAK,CAACC,IAAN,CAAWC,UADf;AAELJ,IAAAA,kBAAkB,EAAEX,yBAAyB,CAACa,KAAD;AAFxC,GAAP;AAID,CALD;;AAOA,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLlB,IAAAA,qBAAqB,EAAE,MAAMkB,QAAQ,CAAClB,qBAAqB,EAAtB;AADhC,GAAP;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CAACiB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CZ,QAA7C,CAAf","sourcesContent":["import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from 'react-router';\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner';\r\n\r\n// import { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop-sagas';\r\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop-selectors';\r\nimport CollectionPage from '../collection-page/collection-page';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchCollectionsStart();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${this.props.match.path}`}\r\n          render={(props) => (\r\n            <CollectionsOverviewWithSpinner\r\n              isLoading={this.props.loading}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${this.props.match.path}/:collectionId`}\r\n          render={(props) => (\r\n            <CollectionPageWithSpinner\r\n              isLoading={!this.props.isCollectionLoaded}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shop.isFetching,\r\n    isCollectionLoaded: selectIsCollectionsLoaded(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}