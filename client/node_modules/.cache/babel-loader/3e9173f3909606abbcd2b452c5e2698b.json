{"ast":null,"code":"var _jsxFileName = \"D:\\\\courseHunter\\\\React  ( Redux, Hooks, GraphQL)\\\\practice_project\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.js\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { selectCartItems } from '../../redux/cart/cart-selectors';\nimport CartItem from '../cart-item/cart-item';\nimport CustomButton from '../custom-button/custom-button';\nimport './cart-dropdown.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartDropdown = ({\n  cartItems,\n  history\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-items\",\n      children: cartItems.length !== 0 ? cartItems.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 35\n      }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"empty-message\",\n        children: \"Your cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      inverted: true,\n      onClick: () => history.push('/checkout'),\n      children: \"go to checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CartDropdown;\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: selectCartItems(state)\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(CartDropdown));\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["D:/courseHunter/React  ( Redux, Hooks, GraphQL)/practice_project/src/components/cart-dropdown/cart-dropdown.js"],"names":["connect","withRouter","selectCartItems","CartItem","CustomButton","CartDropdown","cartItems","history","length","map","item","id","push","mapStateToProps","state"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAO,sBAAP;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA4B;AAC/C,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACGD,SAAS,CAACE,MAAV,KAAqB,CAArB,GACCF,SAAS,CAACG,GAAV,CAAeC,IAAD,iBAAU,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cAAxB,CADD,gBAGC;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,YAAD;AAAc,MAAA,QAAQ,MAAtB;AAAuB,MAAA,OAAO,EAAE,MAAMJ,OAAO,CAACK,IAAR,CAAa,WAAb,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;KAAMP,Y;;AAiBN,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLR,IAAAA,SAAS,EAAEJ,eAAe,CAACY,KAAD;AADrB,GAAP;AAGD,CAJD;;AAMA,eAAeb,UAAU,CAACD,OAAO,CAACa,eAAD,EAAkB,IAAlB,CAAP,CAA+BR,YAA/B,CAAD,CAAzB","sourcesContent":["import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { selectCartItems } from '../../redux/cart/cart-selectors';\r\nimport CartItem from '../cart-item/cart-item';\r\nimport CustomButton from '../custom-button/custom-button';\r\nimport './cart-dropdown.scss';\r\n\r\nconst CartDropdown = ({ cartItems, history }) => {\r\n  return (\r\n    <div className=\"cart-dropdown\">\r\n      <div className=\"cart-items\">\r\n        {cartItems.length !== 0 ? (\r\n          cartItems.map((item) => <CartItem key={item.id} item={item} />)\r\n        ) : (\r\n          <span className=\"empty-message\">Your cart is empty</span>\r\n        )}\r\n      </div>\r\n      <CustomButton inverted onClick={() => history.push('/checkout')}>\r\n        go to checkout\r\n      </CustomButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartItems: selectCartItems(state),\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(CartDropdown));\r\n"]},"metadata":{},"sourceType":"module"}