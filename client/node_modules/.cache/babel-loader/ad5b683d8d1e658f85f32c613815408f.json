{"ast":null,"code":"import { all, call, put, takeLatest } from '@redux-saga/core/effects';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase-utils';\nimport { EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START } from './user-types';\nimport { googleProvider } from '../../firebase/firebase-utils';\nimport { googleSignInFail, googleSignInSuccess } from './user-actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFail(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n  } catch (error) {\n    yield put(signInWithEmail(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["D:/courseHunter/React  ( Redux, Hooks, GraphQL)/practice_project/src/redux/user/user-sagas.js"],"names":["all","call","put","takeLatest","auth","createUserProfileDocument","EMAIL_SIGN_IN_START","GOOGLE_SIGN_IN_START","googleProvider","googleSignInFail","googleSignInSuccess","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","message","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","onEmailSignInStart","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,0BAA3C;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,+BAAhD;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,cAA1D;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,gBAAtD;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACS,eAAL,CAAqBL,cAArB,CAAvB;AACA,UAAMM,OAAO,GAAG,MAAMb,IAAI,CAACI,yBAAD,EAA4BO,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACPQ,mBAAmB,CAAC;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADZ,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACO,gBAAgB,CAACU,KAAK,CAACC,OAAP,CAAjB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACqB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACD,GAFD,CAEE,OAAOL,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACmB,eAAe,CAACF,KAAK,CAACC,OAAP,CAAhB,CAAT;AACD;AACF;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACrC,QAAMvB,UAAU,CAACI,oBAAD,EAAuBI,gBAAvB,CAAhB;AACD;AAED,OAAO,UAAUgB,kBAAV,GAA+B;AACpC,QAAMxB,UAAU,CAACG,mBAAD,CAAhB;AACD;AAED,OAAO,UAAUsB,SAAV,GAAsB;AAC3B,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACyB,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeLatest } from '@redux-saga/core/effects';\r\nimport { auth, createUserProfileDocument } from '../../firebase/firebase-utils';\r\nimport { EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START } from './user-types';\r\nimport { googleProvider } from '../../firebase/firebase-utils';\r\nimport { googleSignInFail, googleSignInSuccess } from './user-actions';\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(\r\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }),\r\n    );\r\n  } catch (error) {\r\n    yield put(googleSignInFail(error.message));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n  } catch (error) {\r\n    yield put(signInWithEmail(error.message));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(EMAIL_SIGN_IN_START);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onGoogleSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}