{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { convertCollectionsShanpshotToMap, firestore } from '../../firebase/firebase-utils';\nimport { fetchCollectionsFail, fetchCollectionsSuccess } from './shop-actions';\nimport { FETCH_COLLECTIONS_START } from './shop-types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsShanpshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (err) {\n    yield put(fetchCollectionsFail(err.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["D:/courseHunter/React  ( Redux, Hooks, GraphQL)/practice_project/client/src/redux/shop/shop-sagas.js"],"names":["call","put","takeEvery","convertCollectionsShanpshotToMap","firestore","fetchCollectionsFail","fetchCollectionsSuccess","FETCH_COLLECTIONS_START","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","err","message","fetchCollectionsStart"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SACEC,gCADF,EAEEC,SAFF,QAGO,+BAHP;AAIA,SAASC,oBAAT,EAA+BC,uBAA/B,QAA8D,gBAA9D;AACA,SAASC,uBAAT,QAAwC,cAAxC;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAC/BG,gCAD+B,EAE/BQ,QAF+B,CAAjC;AAIA,UAAMV,GAAG,CAACK,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZ,UAAMb,GAAG,CAACI,oBAAoB,CAACS,GAAG,CAACC,OAAL,CAArB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMd,SAAS,CAACK,uBAAD,EAA0BC,qBAA1B,CAAf;AACD","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport {\r\n  convertCollectionsShanpshotToMap,\r\n  firestore,\r\n} from '../../firebase/firebase-utils';\r\nimport { fetchCollectionsFail, fetchCollectionsSuccess } from './shop-actions';\r\nimport { FETCH_COLLECTIONS_START } from './shop-types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  try {\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(\r\n      convertCollectionsShanpshotToMap,\r\n      snapshot,\r\n    );\r\n    yield put(fetchCollectionsSuccess(collectionsMap));\r\n  } catch (err) {\r\n    yield put(fetchCollectionsFail(err.message));\r\n  }\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}