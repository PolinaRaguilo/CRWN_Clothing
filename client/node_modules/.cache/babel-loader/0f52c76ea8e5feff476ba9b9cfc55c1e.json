{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingItem = cartItems.find(item => item.id === cartItemToAdd.id);\n\n  if (existingItem) {\n    return cartItems.map(item => item.id === cartItemToAdd.id ? { ...item,\n      quantity: item.quantity + 1\n    } : item);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeOneItem = (cartItems, cartItemId) => {\n  const existingItem = cartItems.find(item => item.id === cartItemId);\n\n  if (existingItem.quantity === 1) {\n    return cartItems.filter(itemCart => itemCart.id !== cartItemId);\n  }\n\n  return cartItems.map(item => item.id === cartItemId ? { ...item,\n    quantity: item.quantity - 1\n  } : item);\n};","map":{"version":3,"sources":["D:/courseHunter/React  ( Redux, Hooks, GraphQL)/practice_project/client/src/redux/cart/cart-utility.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingItem","find","item","id","map","quantity","removeOneItem","cartItemId","filter","itemCart"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD,QAAMC,YAAY,GAAGF,SAAS,CAACG,IAAV,CAAgBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,aAAa,CAACI,EAAnD,CAArB;;AAEA,MAAIH,YAAJ,EAAkB;AAChB,WAAOF,SAAS,CAACM,GAAV,CAAeF,IAAD,IACnBA,IAAI,CAACC,EAAL,KAAYJ,aAAa,CAACI,EAA1B,GACI,EAAE,GAAGD,IAAL;AAAWG,MAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAArC,KADJ,GAEIH,IAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACD,CAZM;AAcP,OAAO,MAAMC,aAAa,GAAG,CAACR,SAAD,EAAYS,UAAZ,KAA2B;AACtD,QAAMP,YAAY,GAAGF,SAAS,CAACG,IAAV,CAAgBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYI,UAArC,CAArB;;AAEA,MAAIP,YAAY,CAACK,QAAb,KAA0B,CAA9B,EAAiC;AAC/B,WAAOP,SAAS,CAACU,MAAV,CAAkBC,QAAD,IAAcA,QAAQ,CAACN,EAAT,KAAgBI,UAA/C,CAAP;AACD;;AACD,SAAOT,SAAS,CAACM,GAAV,CAAeF,IAAD,IACnBA,IAAI,CAACC,EAAL,KAAYI,UAAZ,GAAyB,EAAE,GAAGL,IAAL;AAAWG,IAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAArC,GAAzB,GAAoEH,IAD/D,CAAP;AAGD,CATM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\r\n  const existingItem = cartItems.find((item) => item.id === cartItemToAdd.id);\r\n\r\n  if (existingItem) {\r\n    return cartItems.map((item) =>\r\n      item.id === cartItemToAdd.id\r\n        ? { ...item, quantity: item.quantity + 1 }\r\n        : item,\r\n    );\r\n  }\r\n\r\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n};\r\n\r\nexport const removeOneItem = (cartItems, cartItemId) => {\r\n  const existingItem = cartItems.find((item) => item.id === cartItemId);\r\n\r\n  if (existingItem.quantity === 1) {\r\n    return cartItems.filter((itemCart) => itemCart.id !== cartItemId);\r\n  }\r\n  return cartItems.map((item) =>\r\n    item.id === cartItemId ? { ...item, quantity: item.quantity - 1 } : item,\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}